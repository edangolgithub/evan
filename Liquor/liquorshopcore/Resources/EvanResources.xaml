<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:conv="clr-namespace:TescoWine.Converters"
    xmlns:extra="clr-namespace:Rms.Extra"
    xmlns:ic="http://metro.mahapps.com/winfx/xaml/iconpacks">
    <conv:ImagePathConverter x:Key="imconv" />
    <SolidColorBrush x:Key="HeadingBrush">#33b4ed</SolidColorBrush>
    <SolidColorBrush x:Key="ButtonBorderBrush" Color="#E7E1D8" />
    <SolidColorBrush x:Key="TextBackGroundColor" Color="#EEEEEE" />
    <SolidColorBrush x:Key="ListViewItemBackground" Color="#E8DAEC" />
    <SolidColorBrush x:Key="ListViewBackground" Color="{Binding Color, Source={StaticResource TextBackGroundColor}}" />
    <Color x:Key="MenuBorderBrush">#33b4ed</Color>
    <!--<Style TargetType="Menu">
        <Setter Property="Background" Value="{DynamicResource AccentColorBrush}" />

        <Setter Property="Height" Value="40" />
    -->
    <!--<Setter Property="HorizontalAlignment" Value="Stretch" />-->
    <!--
        <Setter Property="HorizontalContentAlignment" Value="Right" />
    </Style>
    <Style TargetType="MenuItem">
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Margin" Value="5" />
    -->
    <!--<Setter Property="Foreground" Value="#F4EFEF" />-->
    <!--
        <Setter Property="FontSize" Value="20" />
        <Setter Property="FontFamily" Value="Times New Roman" />
        <Style.Triggers>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Background" Value="SteelBlue" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Foreground" Value="White" />
            </Trigger>
        </Style.Triggers>
    </Style>-->
    <Style BasedOn="{StaticResource MaterialDesignDatePicker}" TargetType="DatePicker">
        <Setter Property="Width" Value="200" />
        <Setter Property="Height" Value="23" />
        <!--<Setter Property="Margin" Value="10" />-->
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="true">
                <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}" />
                <Setter Property="Background" Value="#FA7D7D" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <ControlTemplate x:Key="VsMenuTop" TargetType="MenuItem">
        <StackPanel
            Height="35"
            Orientation="Horizontal"
            TextBlock.FontSize="15px">
            <!--  label, icons, etc.  -->
            <Label
                Margin="5"
                Content="{TemplateBinding Header}"
                Foreground="White" />
            <ic:PackIconMaterial
                Height="5"
                Margin="-5,10,5,5"
                VerticalAlignment="Center"
                Foreground="White"
                Kind="ChevronDown"
                Visibility="{Binding HasItems, Converter={StaticResource bool2VisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}}" />

            <!--  sub items  -->
            <Popup
                AllowsTransparency="True"
                Focusable="False"
                IsOpen="{TemplateBinding IsSubmenuOpen}">
                <Border
                    Background="white"
                    BorderBrush="#E0E0E0"
                    BorderThickness="1">
                    <StackPanel IsItemsHost="True" />
                </Border>
            </Popup>
            <StackPanel.Style>
                <Style TargetType="StackPanel">
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#4D9B08" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </StackPanel.Style>
        </StackPanel>
    </ControlTemplate>

    <!--  style a non-top level menu item  -->
    <ControlTemplate x:Key="VsMenuSub" TargetType="MenuItem">
        <DockPanel x:Name="panel" TextBlock.FontSize="15px">
            <!--  label, icons, etc.  -->
            <Image
                Width="20"
                Margin="5,0"
                Source="{Binding Icon, RelativeSource={RelativeSource TemplatedParent}}" />
            <Label
                Margin="0,5,5,5"
                Content="{TemplateBinding Header}"
                Foreground="Black" />

            <!--  draw the right arrow only if this menu item has sub items  -->
            <ic:PackIconMaterial
                VerticalAlignment="Center"
                Kind="ChevronDown"
                Visibility="{Binding HasItems, Converter={StaticResource bool2VisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}}" />

            <!--  sub items  -->
            <Popup
                AllowsTransparency="True"
                Focusable="False"
                IsOpen="{TemplateBinding IsSubmenuOpen}"
                Placement="Right">
                <Border
                    Background="White"
                    BorderBrush="#E0E0E0"
                    BorderThickness="1">
                    <StackPanel IsItemsHost="True" />
                </Border>
            </Popup>
        </DockPanel>
        <ControlTemplate.Triggers>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter TargetName="panel" Property="Background" Value="#EFF6FC" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--  style the separator  -->
    <ControlTemplate x:Key="VsMenuSep" TargetType="Separator">
        <Border Height="1" Background="#E0E0E0" />
    </ControlTemplate>

    <!--  style the VSOnline  -->
    <ControlTemplate x:Key="VsOnline" TargetType="MenuItem">
        <StackPanel
            Height="40"
            Background="#005A9E"
            Orientation="Horizontal"
            TextBlock.FontSize="15px">
            <Label
                Margin="5"
                Content="{TemplateBinding Header}"
                Foreground="White" />
            <Image
                Height="20"
                Margin="0,0,5,0"
                Source="icon_down.png" />

            <!--  sub items  -->
            <Popup
                AllowsTransparency="True"
                Focusable="False"
                IsOpen="{TemplateBinding IsSubmenuOpen}">
                <Border
                    Background="White"
                    BorderBrush="#E0E0E0"
                    BorderThickness="1">
                    <StackPanel IsItemsHost="True" />
                </Border>
            </Popup>
        </StackPanel>
    </ControlTemplate>

    <!--  some base stuff  -->
    <Style BasedOn="{StaticResource MaterialDesignMenu}" TargetType="Menu">
        <Setter Property="Background" Value="{DynamicResource AccentColorBrush}" />
        <Setter Property="Height" Value="30" />
    </Style>

    <LinearGradientBrush x:Key="usercontrolbackground" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Offset="0" Color="#F4EFEA" />
        <GradientStop Offset="1" Color="#FFDED7D7" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="Flat3DBorderBrush" StartPoint="0.499,0" EndPoint="0.501,1">
        <GradientStop Offset="0" Color="#FFF" />
        <GradientStop Offset="0.01" Color="#DDD" />
        <GradientStop Offset="0.99" Color="#AAA" />
        <GradientStop Offset="1" Color="#888" />
    </LinearGradientBrush>
    <!--<conv:ImagePathConverter x:Key="imconv" />
    <conv:StringToBoolConverter x:Key="sbool" />
    <conv:Only8LetterConverter x:Key="only8" />-->
    <extra:TileView x:Key="extra" />
    <GridView x:Key="GridView" AllowsColumnReorder="True">
        <GridViewColumn Header="Photo">
            <GridViewColumn.CellTemplate>
                <DataTemplate>
                    <Image
                        Width="50"
                        Height="50"
                        Source="{Binding ItemImage, Converter={StaticResource imconv}}" />
                </DataTemplate>
            </GridViewColumn.CellTemplate>
        </GridViewColumn>
        <GridViewColumn
            x:Name="ItemlistView1"
            DisplayMemberBinding="{Binding ItemName}"
            Header="Item" />
        <GridViewColumn DisplayMemberBinding="{Binding Price, StringFormat=C}" Header="Price" />


    </GridView>
    <!--  SelectedBackground="{x:Static Brushes.BlanchedAlmond}"  -->
    <extra:TileView x:Key="ImageView" SelectedBackground="#CED133">
        <extra:TileView.ItemTemplate>
            <DataTemplate>
                <StackPanel
                    Width="100"
                    Margin="3"
                    VerticalAlignment="Top">
                    <Border
                        Padding="1"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Background="#BBB"
                        BorderBrush="{StaticResource Flat3DBorderBrush}"
                        BorderThickness="1">
                        <Image
                            Width="90"
                            Height="90"
                            Source="{Binding ItemImage, Converter={StaticResource imconv}}"
                            Stretch="UniformToFill" />
                    </Border>
                    <TextBlock
                        HorizontalAlignment="Center"
                        Text="{Binding ItemName}"
                        TextWrapping="Wrap" />
                </StackPanel>
            </DataTemplate>
        </extra:TileView.ItemTemplate>
    </extra:TileView>

    <extra:TileView x:Key="ImageDetailView">
        <extra:TileView.ItemTemplate>
            <DataTemplate>
                <StackPanel
                    Width="70"
                    Height="90"
                    Margin="4">
                    <Border
                        Padding="2"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        BorderBrush="{StaticResource Flat3DBorderBrush}"
                        BorderThickness="1"
                        CornerRadius="5">
                        <Image
                            Name="MyImage"
                            Width="70"
                            Height="50"
                            Source="{Binding ItemImage, Converter={StaticResource imconv}}"
                            Stretch="UniformToFill" />
                    </Border>

                    <TextBlock
                        HorizontalAlignment="Center"
                        FontWeight="Bold"
                        Text="{Binding ItemName, Converter={StaticResource only8}}"
                        TextWrapping="Wrap" />
                    <!--<TextBlock HorizontalAlignment="Center" Text="{Binding Price, StringFormat=\{0:C\}, ConverterCulture={x:Static sysglb:CultureInfo.CurrentCulture}}" />-->

                </StackPanel>
            </DataTemplate>
        </extra:TileView.ItemTemplate>

    </extra:TileView>
    <!--<extra:TileView x:Key="ImageDetailView">
        <extra:TileView.ItemTemplate>
            <DataTemplate>
                <Border
                    BorderBrush="#DDD"
                    BorderThickness="1"
                    CornerRadius="1">
                    <StackPanel Width="80" Margin="2">
                        <Border
                            Padding="1"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Background="#BBB"
                            BorderBrush="{StaticResource Flat3DBorderBrush}"
                            BorderThickness="1">
                            <Image
                                Name="MyImage"
                                Width="70"
                                Height="50"
                                Source="{Binding ItemImage, Converter={StaticResource imconv}}"
                                Stretch="UniformToFill" />
                        </Border>

                        <TextBlock
                            HorizontalAlignment="Center"
                            FontWeight="Bold"
                            Text="{Binding ItemName, Converter={StaticResource only8}}"
                            TextWrapping="Wrap" />
                        <TextBlock HorizontalAlignment="Center" Text="{Binding Price, StringFormat=\{0:C\}, ConverterCulture={x:Static sysglb:CultureInfo.CurrentCulture}}" />
                    </StackPanel>

                </Border>

            </DataTemplate>
        </extra:TileView.ItemTemplate>
    </extra:TileView>-->
    <Style x:Key="MyFocusVisualStyte">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border x:Name="FocusStyle" Background="#4433b4ed" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Resources used by the Button template.  -->

    <SolidColorBrush x:Key="DefaultBackground" Color="Blue" />
    <SolidColorBrush x:Key="DisabledBackground" Color="Gray" />
    <SolidColorBrush x:Key="ControlForeground" Color="White" />

    <RadialGradientBrush x:Key="HighlightBackground" GradientOrigin="0.5,0.3" RadiusX="1" RadiusY="5">
        <GradientStop Offset="0" Color="White" />
        <GradientStop Offset=".4" Color="Blue" />
    </RadialGradientBrush>

    <RadialGradientBrush x:Key="PressedBackground" GradientOrigin="0.5,0.3" RadiusX="1" RadiusY="5">
        <GradientStop Offset="0" Color="White" />
        <GradientStop Offset="1" Color="Blue" />
    </RadialGradientBrush>

    <RadialGradientBrush x:Key="Border" GradientOrigin="0.5,0.3" RadiusX="1" RadiusY="5">
        <GradientStop Offset="0" Color="White" />
        <GradientStop Offset="1" Color="Blue" />
    </RadialGradientBrush>


    <!--  MahApps Brushes  -->
    <!--<SolidColorBrush x:Key="HighlightBrush" Color="{DynamicResource Primary700}"/>
    <SolidColorBrush x:Key="AccentBaseColorBrush" Color="{DynamicResource Primary600}" />
    <SolidColorBrush x:Key="AccentColorBrush" Color="{DynamicResource Primary500}"/>
    <SolidColorBrush x:Key="AccentColorBrush2" Color="{DynamicResource Primary400}"/>
    <SolidColorBrush x:Key="AccentColorBrush3" Color="{DynamicResource Primary300}"/>
    <SolidColorBrush x:Key="AccentColorBrush4" Color="{DynamicResource Primary200}"/>
    <SolidColorBrush x:Key="WindowTitleColorBrush" Color="{DynamicResource Primary700}"/>
    <SolidColorBrush x:Key="AccentSelectedColorBrush" Color="{DynamicResource Primary500Foreground}"/>
    <LinearGradientBrush x:Key="ProgressBrush" EndPoint="0.001,0.5" StartPoint="1.002,0.5">
        <GradientStop Color="{DynamicResource Primary700}" Offset="0"/>
        <GradientStop Color="{DynamicResource Primary300}" Offset="1"/>
    </LinearGradientBrush>-->
    <SolidColorBrush x:Key="CheckmarkFill" Color="{DynamicResource Primary500}" />
    <SolidColorBrush x:Key="RightArrowFill" Color="{DynamicResource Primary500}" />
    <SolidColorBrush x:Key="IdealForegroundColorBrush" Color="{DynamicResource Primary500Foreground}" />
    <SolidColorBrush
        x:Key="IdealForegroundDisabledBrush"
        Opacity="0.4"
        Color="{DynamicResource Primary500}" />
    <SolidColorBrush x:Key="MahApps.Metro.Brushes.ToggleSwitchButton.OnSwitchBrush.Win10" Color="{DynamicResource Primary500}" />
    <SolidColorBrush x:Key="MahApps.Metro.Brushes.ToggleSwitchButton.OnSwitchMouseOverBrush.Win10" Color="{DynamicResource Primary400}" />
    <SolidColorBrush x:Key="MahApps.Metro.Brushes.ToggleSwitchButton.ThumbIndicatorCheckedBrush.Win10" Color="{DynamicResource Primary500Foreground}" />
    <Style TargetType="{x:Type Window}">
        <Setter Property="FontFamily" Value="Times New Roman" />
    </Style>
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Themes/TextThemes.xaml" />
        <ResourceDictionary Source="/Themes/DataGridTemplate.xaml" />
        <ResourceDictionary Source="/Themes/EvanTheme.xaml" />
        <ResourceDictionary Source="/Themes/ButtonTheme.xaml" />
        <ResourceDictionary Source="/Themes/TabControlTheme.xaml" />
        <ResourceDictionary Source="/Themes/BorderTheme.xaml" />
        <ResourceDictionary Source="/Themes/ComboBoxTheme.xaml" />
        <ResourceDictionary Source="/Themes/ListViewTheme.xaml" />
        <ResourceDictionary Source="/Themes/GroupBoxTheme.xaml" />
    </ResourceDictionary.MergedDictionaries>

</ResourceDictionary>