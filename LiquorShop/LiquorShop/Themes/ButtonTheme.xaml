<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:ic="http://metro.mahapps.com/winfx/xaml/iconpacks"
    xmlns:local="clr-namespace:Rms.Themes">

    <Style
        x:Key="PlusButtom"
        BasedOn="{StaticResource MaterialDesignRaisedLightButton}"
        TargetType="Button">
        <!--<Setter Property="Margin" Value="5" />-->
        <Setter Property="Height" Value="35" />
        <Setter Property="Width" Value="35" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="FontWeight" Value="ExtraBold" />
        <Setter Property="Background" Value="{DynamicResource AccentColorBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource ButtonBorderBrush}" />

    </Style>

    <Style BasedOn="{StaticResource MaterialDesignRaisedLightButton}" TargetType="Button">
        <Setter Property="Margin" Value="5" />
        <Setter Property="Padding" Value="5,0,5,0" />
        <Setter Property="Background" Value="{DynamicResource AccentColorBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource ButtonBorderBrush}" />
        <Setter Property="Height" Value="29" />
    </Style>
    <!--  The button control template.  -->

    <ControlTemplate x:Key="ButtonTemplate1" TargetType="Button">
        <Border
            Name="Border"
            Background="{StaticResource DefaultBackground}"
            BorderBrush="{StaticResource Border}"
            BorderThickness="2"
            CornerRadius="2"
            TextBlock.Foreground="White">
            <Grid>
                <Rectangle
                    Name="FocusCue"
                    SnapsToDevicePixels="True"
                    Stroke="Black"
                    StrokeDashArray="1 2"
                    StrokeThickness="1"
                    Visibility="Hidden" />
                <ContentPresenter Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource HighlightBackground}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource PressedBackground}" />
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="True">
                <Setter TargetName="FocusCue" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource DisabledBackground}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>





    <ControlTemplate x:Key="AnimatedButtonTemplate" TargetType="{x:Type Button}">
        <Border
            Name="Border"
            Background="Red"
            BorderBrush="Orange"
            BorderThickness="3"
            CornerRadius="2"
            TextBlock.Foreground="White">
            <Grid>
                <Rectangle
                    Name="FocusCue"
                    SnapsToDevicePixels="True"
                    Stroke="Black"
                    StrokeDashArray="1 2"
                    StrokeThickness="1"
                    Visibility="Hidden" />
                <ContentPresenter Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <EventTrigger RoutedEvent="MouseEnter">
                <BeginStoryboard>
                    <Storyboard>
                        <ColorAnimation
                            AutoReverse="True"
                            RepeatBehavior="Forever"
                            Storyboard.TargetName="Border"
                            Storyboard.TargetProperty="Background.Color"
                            To="Blue"
                            Duration="0:0:1" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
            <EventTrigger RoutedEvent="MouseLeave">
                <BeginStoryboard>
                    <Storyboard>
                        <ColorAnimation
                            Storyboard.TargetName="Border"
                            Storyboard.TargetProperty="Background.Color"
                            Duration="0:0:0.5" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>





    <ControlTemplate x:Key="CustomButtonTemplate" TargetType="{x:Type Button}">
        <Border
            Name="Border"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="2"
            CornerRadius="2">
            <Grid>
                <Rectangle
                    Name="FocusCue"
                    SnapsToDevicePixels="True"
                    Stroke="Black"
                    StrokeDashArray="1 2"
                    StrokeThickness="1"
                    Visibility="Hidden" />
                <ContentPresenter Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsKeyboardFocused" Value="True">
                <Setter TargetName="FocusCue" Property="Visibility" Value="Visible" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="CustomButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Control.Template" Value="{StaticResource CustomButtonTemplate}" />
        <Setter Property="BorderBrush" Value="{StaticResource Border}" />
        <Setter Property="Background" Value="{StaticResource DefaultBackground}" />
        <Setter Property="TextBlock.Foreground" Value="{StaticResource ControlForeground}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource HighlightBackground}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource PressedBackground}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{StaticResource DisabledBackground}" />
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>